import { Number256 } from '../api/types';
export declare const isNumeric: (numToCheck: any) => boolean;
export interface IPrettifyNumberConfig {
    minDecimalPlaces: number;
    maxDecimalPlaces: number;
    /** significant digits to show in decimals while respecting decimal places */
    minDecimalSignificantDigits: number;
    /** special case for zero, e.g. we may want to display $0.00 or 0.0 ALPH */
    decimalPlacesWhenZero: number;
}
export declare const prettifyNumberConfig: Record<string, IPrettifyNumberConfig>;
export declare function prettifyAttoAlphAmount(amount: Number256): string | undefined;
export declare function prettifyTokenAmount(amount: Number256, decimals: number): string | undefined;
export declare function prettifyExactAmount(amount: Number256, decimals: number): string | undefined;
export declare function prettifyNumber(amount: Number256, decimals: number, config: IPrettifyNumberConfig): string | undefined;
export declare function convertAmountWithDecimals(amount: string | number, decimals: number): bigint | undefined;
export declare function convertAlphAmountWithDecimals(amount: string | number): bigint | undefined;
export declare function number256ToBigint(number: Number256): bigint;
export declare function number256ToNumber(number: Number256, decimals: number): number;
