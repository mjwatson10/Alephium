import { Token } from '../api';
import { Method } from '../codec';
import { Script } from '../codec/script-codec';
import { HexString } from '../utils';
/**
 * Contract call extracted from a script
 * @param contractAddress the address of the contract
 * @param approvedAttoAlphAmount the amount of ALPH approved to the contract
 *   - undefined if no ALPH is approved
 *   - 'unknown' if the amount cannot be determined
 *   - a number if the amount is known
 * @param approvedTokens the tokens approved to the contract
 *  - undefined if no tokens are approved
 *  - 'unknown' if the tokens cannot be determined
 *  - an array of tokens if the tokens are known
 */
export interface ContractCall {
    contractAddress: string;
    approvedAttoAlphAmount?: bigint | 'unknown';
    approvedTokens?: Token[] | 'unknown';
}
export declare class ScriptSimulator {
    static extractContractCalls(unsignedTx: HexString): ContractCall[];
    static extractContractCallsWithErrors(unsignedTx: HexString): ContractCall[];
    static extractContractCallsFromScript(script: Script): ContractCall[];
    static extractContractCallsFromMainMethod(mainMethod: Method): ContractCall[];
}
