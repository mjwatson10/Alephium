import { node } from '../api';
import { Subscription, SubscribeOptions } from '../utils';
export interface EventSubscribeOptions<Message> extends SubscribeOptions<Message> {
    onEventCountChanged?: (eventCount: number) => Promise<void> | void;
}
export declare class EventSubscription extends Subscription<node.ContractEvent> {
    readonly contractAddress: string;
    private fromCount;
    private onEventCountChanged?;
    constructor(options: EventSubscribeOptions<node.ContractEvent>, contractAddress: string, fromCount?: number);
    currentEventCount(): number;
    private getEvents;
    polling(): Promise<void>;
}
export declare function subscribeToEvents(options: EventSubscribeOptions<node.ContractEvent>, contractAddress: string, fromCount?: number): EventSubscription;
