import { UnsignedTx as ApiUnsignedTx } from '../api/api-alephium';
import { Script } from './script-codec';
import { Option } from './option-codec';
import { Input } from './input-codec';
import { AssetOutput } from './asset-output-codec';
import { ObjectCodec } from './codec';
export interface UnsignedTx {
    version: number;
    networkId: number;
    statefulScript: Option<Script>;
    gasAmount: number;
    gasPrice: bigint;
    inputs: Input[];
    fixedOutputs: AssetOutput[];
}
export declare class UnsignedTxCodec extends ObjectCodec<UnsignedTx> {
    encodeApiUnsignedTx(input: ApiUnsignedTx): Uint8Array;
    decodeApiUnsignedTx(input: Uint8Array): ApiUnsignedTx;
    static txId(unsignedTx: UnsignedTx): string;
    static toApiUnsignedTx(unsigned: UnsignedTx): ApiUnsignedTx;
    static fromApiUnsignedTx(unsignedTx: ApiUnsignedTx): UnsignedTx;
}
export declare const unsignedTxCodec: UnsignedTxCodec;
