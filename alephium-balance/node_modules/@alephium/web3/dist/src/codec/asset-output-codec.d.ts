import { ArrayCodec } from './array-codec';
import { ByteString } from './bytestring-codec';
import { LockupScript } from './lockup-script-codec';
import { FixedAssetOutput } from '../api/api-alephium';
import { ObjectCodec } from './codec';
import { Token } from './token-codec';
export interface AssetOutput {
    amount: bigint;
    lockupScript: LockupScript;
    lockTime: bigint;
    tokens: Token[];
    additionalData: ByteString;
}
export declare class AssetOutputCodec extends ObjectCodec<AssetOutput> {
    static toFixedAssetOutputs(txIdBytes: Uint8Array, outputs: AssetOutput[]): FixedAssetOutput[];
    static toFixedAssetOutput(txIdBytes: Uint8Array, output: AssetOutput, index: number): FixedAssetOutput;
    static fromFixedAssetOutputs(fixedOutputs: FixedAssetOutput[]): AssetOutput[];
    static fromFixedAssetOutput(fixedOutput: FixedAssetOutput): AssetOutput;
}
export declare const assetOutputCodec: AssetOutputCodec;
export declare const assetOutputsCodec: ArrayCodec<AssetOutput>;
