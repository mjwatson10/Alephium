import { UnsignedTx } from './unsigned-tx-codec';
import { Signature } from './signature-codec';
import { ContractOutputRef } from './contract-output-ref-codec';
import { Transaction as ApiTransaction } from '../api/api-alephium';
import { ObjectCodec } from './codec';
import { Output } from './output-codec';
export interface Transaction {
    unsigned: UnsignedTx;
    scriptExecutionOk: number;
    contractInputs: ContractOutputRef[];
    generatedOutputs: Output[];
    inputSignatures: Signature[];
    scriptSignatures: Signature[];
}
export declare class TransactionCodec extends ObjectCodec<Transaction> {
    encodeApiTransaction(input: ApiTransaction): Uint8Array;
    decodeApiTransaction(input: Uint8Array): ApiTransaction;
    static toApiTransaction(transaction: Transaction): ApiTransaction;
    static fromApiTransaction(tx: ApiTransaction): Transaction;
}
export declare const transactionCodec: TransactionCodec;
